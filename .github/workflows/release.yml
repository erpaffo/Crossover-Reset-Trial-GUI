name: Build & Release macOS App (Optimized)

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Specifica una versione precisa per riproducibilitÃ 
          python-version: '3.11'
          # Abilita il caching delle dipendenze pip
          cache: 'pip'

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build macOS .app with PyInstaller
        run: |
          APP_NAME="CrossOverTrialManager"
          # Potresti anche eseguire pyinstaller NomeTuoFile.spec se ne usi uno
          pyinstaller \
            --name "$APP_NAME" \
            --windowed \
            --onedir \
            --icon=icon.icns \
            --add-data "script.sh:." \
            main.py

      - name: Ad-Hoc Sign the Application
        run: |
          APP_NAME="CrossOverTrialManager"
          APP_PATH="dist/${APP_NAME}.app"
          echo "Performing ad-hoc signing on ${APP_PATH}"
          codesign --force --deep -s - "${APP_PATH}"
          echo "Ad-hoc signing complete."

      - name: Zip the Ad-Hoc Signed .app bundle
        id: zip_app
        run: |
          APP_NAME="CrossOverTrialManager"
          TAG=${{ github.ref_name }}
          ZIP_NAME="${APP_NAME}-mac-${TAG}.zip"
          BUILD_DIR="dist"
          ZIP_PATH="${BUILD_DIR}/${ZIP_NAME}"

          echo "Zipping ad-hoc signed app into ${ZIP_NAME}"
          cd "${BUILD_DIR}"
          zip -r "${ZIP_NAME}" "${APP_NAME}.app"
          cd ..

          echo "zip_path=${ZIP_PATH}" >> $GITHUB_OUTPUT
          echo "zip_name=${ZIP_NAME}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Ad-Hoc Signed Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release for tag ${{ steps.zip_app.outputs.tag }}"
          gh release create ${{ steps.zip_app.outputs.tag }} \
             --repo ${{ github.repository }} \
             --title "Release ${{ steps.zip_app.outputs.tag }}" \
             --generate-notes \
             --draft=false \
             --prerelease=false

          echo "Uploading ad-hoc signed asset ${{ steps.zip_app.outputs.zip_path }}"
          gh release upload ${{ steps.zip_app.outputs.tag }} \
             ${{ steps.zip_app.outputs.zip_path }} \
             --repo ${{ github.repository }} \
             --clobber